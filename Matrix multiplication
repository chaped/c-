#include <iostream>

using namespace std;

int** matrix_mult(int n, int m, int o, int ** A, int ** B, int ** C) {
    int temp = 0;
    for ( int k = 0; k < n; k++)
    { // abre primer ciclo for
        for ( int j = 0; j < o; j++)
        { // abre el segundo ciclo for

            for ( int i = 0; i < m; i++ )
                C[ k ][j ] += A[k][i]*B[i][j];
    }
    }
    return C;
}

    // C_ij = sum (k=1 to n) A_ik * B_kj



// Preparation code. Don't modify anything under this line!
int** create_matrix(int n, int m) {
    int **mat;

    mat = new int*[n];
    for(int i=0; i<n; i++) {
        mat[i] = new int[m];
        for(int j=0; j<m; j++) {
            std::cin >> mat[i][j];
        }
    }

    return mat;
}

int** create_empty_matrix(int n, int m) {
    int **mat;

    mat = new int*[n];
    for(int i=0; i<n; i++) {
        mat[i] = new int[m];
        for(int j=0; j<m; j++) {
            mat[i][j] = 0;
        }
    }

    return mat;
}

void decreate_mat(int n, int **mat) {
    for(int i=0; i<n; i++) {
        delete[] mat[i];
    }
    delete[] mat;
}

void print_array(int n, int *arr) {
    std::cout << "[";
    for(int i=0; i<n-1; i++) {
        std::cout << arr[i] << ",";
    }
    std::cout << arr[n-1] << "]";
}

void print_mat(int n, int m, int **mat) {
    std::cout << "[ ";
    for(int i=0; i<n; i++) {
        if(i!=0) { std::cout << "  "; }
        print_array(m, mat[i]);
        if(i!=n-1) {
            std::cout << "," << std::endl;
        } else {
            std::cout << " ]" << std::endl;
        }
    }
}

int main() {
    int n, m, o;
    int **A;
    int **B;
    int **new_mat;

    std::cin >> n >> m >> o;
    A = create_matrix(n, m);
    B = create_matrix(m, o);

    std::cout << "Matrix A:" << std::endl;
    print_mat(n, m, A);
    std::cout << std::endl;

    std::cout << "Matrix B:" << std::endl;
    print_mat(m, o, B);
    std::cout << std::endl;

    new_mat = create_empty_matrix(n, o);
    matrix_mult(n, m, o, A, B, new_mat);

    std::cout << "New matrix: " << std::endl;
    print_mat(n, o, new_mat);

    decreate_mat(n, A);
    decreate_mat(m, B);
    decreate_mat(n, new_mat);

    return 0;
}
